diff --git a/auth-passwd.c b/auth-passwd.c
index 347d91e..182047e 100644
--- a/auth-passwd.c
+++ b/auth-passwd.c
@@ -196,7 +196,11 @@ sys_auth_passwd(struct ssh *ssh, const char *password)
 	char *encrypted_password, *salt = NULL;
 
 	/* Just use the supplied fake password if authctxt is invalid */
+#ifdef __MVS__
+	char *pw_password = shadow_pw(pw);
+#else
 	char *pw_password = authctxt->valid ? shadow_pw(pw) : pw->pw_passwd;
+#endif
 
 	if (pw_password == NULL)
 		return 0;
diff --git a/auth.c b/auth.c
index 3b380d9..05d0e7e 100644
--- a/auth.c
+++ b/auth.c
@@ -618,10 +618,12 @@ fakepw(void)
 
 	memset(&fake, 0, sizeof(fake));
 	fake.pw_name = "NOUSER";
+#ifndef __MVS__
 	fake.pw_passwd = xstrdup("$2a$10$"
 	    "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
 	for (cp = fake.pw_passwd + 7; *cp != '\0'; cp++)
 		*cp = hashchars[arc4random_uniform(sizeof(hashchars) - 1)];
+#endif
 #ifdef HAVE_STRUCT_PASSWD_PW_GECOS
 	fake.pw_gecos = "NOUSER";
 #endif
diff --git a/defines.h b/defines.h
index 279e509..e07adf2 100644
--- a/defines.h
+++ b/defines.h
@@ -55,8 +55,12 @@ enum
 /*
  * Definitions for IP type of service (ip_tos)
  */
+#ifndef __MVS__
 #include <netinet/in_systm.h>
 #include <netinet/ip.h>
+#else
+#include <netinet/in.h>
+#endif
 #ifndef IPTOS_LOWDELAY
 # define IPTOS_LOWDELAY          0x10
 # define IPTOS_THROUGHPUT        0x08
diff --git a/includes.h b/includes.h
index 6d17ef6..63a1cae 100644
--- a/includes.h
+++ b/includes.h
@@ -109,7 +109,9 @@
 #endif
 
 #include <netinet/in.h>
+#if !defined(__MVS__)
 #include <netinet/in_systm.h> /* For typedefs */
+#endif
 #ifdef HAVE_RPC_TYPES_H
 # include <rpc/types.h> /* For INADDR_LOOPBACK */
 #endif
diff --git a/misc.c b/misc.c
index 6135b15..508f646 100644
--- a/misc.c
+++ b/misc.c
@@ -44,8 +44,10 @@
 #include <unistd.h>
 
 #include <netinet/in.h>
+#ifndef __MVS__
 #include <netinet/in_systm.h>
 #include <netinet/ip.h>
+#endif
 #include <netinet/tcp.h>
 #include <arpa/inet.h>
 
@@ -460,7 +462,9 @@ pwcopy(struct passwd *pw)
 	struct passwd *copy = xcalloc(1, sizeof(*copy));
 
 	copy->pw_name = xstrdup(pw->pw_name);
+#ifndef __MVS__
 	copy->pw_passwd = xstrdup(pw->pw_passwd == NULL ? "*" : pw->pw_passwd);
+#endif
 #ifdef HAVE_STRUCT_PASSWD_PW_GECOS
 	copy->pw_gecos = xstrdup(pw->pw_gecos);
 #endif
@@ -1717,12 +1721,14 @@ monotime_double(void)
 void
 bandwidth_limit_init(struct bwlimit *bw, u_int64_t kbps, size_t buflen)
 {
+#ifndef __MVS__
 	bw->buflen = buflen;
 	bw->rate = kbps;
 	bw->thresh = buflen;
 	bw->lamt = 0;
 	timerclear(&bw->bwstart);
 	timerclear(&bw->bwend);
+#endif
 }
 
 /* Callback from read/write loop to insert bandwidth-limiting delays */
@@ -1732,6 +1738,7 @@ bandwidth_limit(struct bwlimit *bw, size_t read_len)
 	u_int64_t waitlen;
 	struct timespec ts, rm;
 
+#ifndef __MVS__
 	bw->lamt += read_len;
 	if (!timerisset(&bw->bwstart)) {
 		monotime_tv(&bw->bwstart);
@@ -1775,6 +1782,7 @@ bandwidth_limit(struct bwlimit *bw, size_t read_len)
 
 	bw->lamt = 0;
 	monotime_tv(&bw->bwstart);
+#endif
 }
 
 /* Make a template filename for mk[sd]temp() */
diff --git a/monitor_wrap.c b/monitor_wrap.c
index 8e379a1..834954b 100644
--- a/monitor_wrap.c
+++ b/monitor_wrap.c
@@ -294,7 +294,9 @@ mm_getpwnamallow(struct ssh *ssh, const char *username)
 	GETPW(m, pw_expire);
 #endif
 	if ((r = sshbuf_get_cstring(m, &pw->pw_name, NULL)) != 0 ||
+#ifndef __MVS__
 	    (r = sshbuf_get_cstring(m, &pw->pw_passwd, NULL)) != 0 ||
+#endif
 #ifdef HAVE_STRUCT_PASSWD_PW_GECOS
 	    (r = sshbuf_get_cstring(m, &pw->pw_gecos, NULL)) != 0 ||
 #endif
diff --git a/openbsd-compat/port-net.c b/openbsd-compat/port-net.c
index 198e73f..6c0c252 100644
--- a/openbsd-compat/port-net.c
+++ b/openbsd-compat/port-net.c
@@ -21,7 +21,9 @@
 
 #include <netinet/in.h>
 #include <arpa/inet.h>
+#ifndef __MVS__
 #include <netinet/ip.h>
+#endif
 
 #include <errno.h>
 #include <fcntl.h>
diff --git a/openbsd-compat/xcrypt.c b/openbsd-compat/xcrypt.c
index 9cded66..a0e828e 100644
--- a/openbsd-compat/xcrypt.c
+++ b/openbsd-compat/xcrypt.c
@@ -128,6 +128,9 @@ xcrypt(const char *password, const char *salt)
 char *
 shadow_pw(struct passwd *pw)
 {
+#ifdef __MVS__
+  return NULL;
+#else
 	char *pw_password = pw->pw_passwd;
 
 # if defined(HAVE_SHADOW_H) && !defined(DISABLE_SHADOW)
@@ -153,4 +156,5 @@ shadow_pw(struct passwd *pw)
 # endif
 
 	return pw_password;
+#endif
 }
diff --git a/packet.c b/packet.c
index fd14f00..0683d49 100644
--- a/packet.c
+++ b/packet.c
@@ -47,7 +47,9 @@
 #endif
 
 #include <netinet/in.h>
+#ifndef __MVS__
 #include <netinet/ip.h>
+#endif
 #include <arpa/inet.h>
 
 #include <errno.h>
diff --git a/platform.c b/platform.c
index 4fe8744..d575c45 100644
--- a/platform.c
+++ b/platform.c
@@ -204,7 +204,11 @@ int
 platform_locked_account(struct passwd *pw)
 {
 	int locked = 0;
+#ifdef __MVS__
+	char *passwd = NULL;
+#else
 	char *passwd = pw->pw_passwd;
+#endif
 #ifdef USE_SHADOW
 	struct spwd *spw = NULL;
 #ifdef USE_LIBIAF
diff --git a/readconf.c b/readconf.c
index 6ded231..e5b1ccc 100644
--- a/readconf.c
+++ b/readconf.c
@@ -21,8 +21,10 @@
 #include <sys/un.h>
 
 #include <netinet/in.h>
+#ifndef __MVS__
 #include <netinet/in_systm.h>
 #include <netinet/ip.h>
+#endif
 #include <arpa/inet.h>
 
 #include <ctype.h>
diff --git a/servconf.c b/servconf.c
index 9d5b73e..8230c0e 100644
--- a/servconf.c
+++ b/servconf.c
@@ -21,8 +21,10 @@
 #endif
 
 #include <netinet/in.h>
-#include <netinet/in_systm.h>
+#ifndef __MVS__
 #include <netinet/ip.h>
+#include <netinet/in_systm.h>
+#endif
 #ifdef HAVE_NET_ROUTE_H
 #include <net/route.h>
 #endif
diff --git a/sshconnect.c b/sshconnect.c
index e6012f0..89d782c 100644
--- a/sshconnect.c
+++ b/sshconnect.c
@@ -590,6 +590,10 @@ confirm(const char *prompt, const char *fingerprint)
 	}
 }
 
+#ifdef __MVS__
+#define IN_LOOPBACKNET 127
+#endif
+
 static int
 sockaddr_is_local(struct sockaddr *hostaddr)
 {
diff --git a/sshd.c b/sshd.c
index 264e81a..336e24f 100644
--- a/sshd.c
+++ b/sshd.c
@@ -1823,8 +1823,10 @@ main(int ac, char **av)
 			    SSH_PRIVSEP_USER);
 	} else {
 		privsep_pw = pwcopy(privsep_pw);
+#ifndef __MVS__
 		freezero(privsep_pw->pw_passwd, strlen(privsep_pw->pw_passwd));
 		privsep_pw->pw_passwd = xstrdup("*");
+#endif
 	}
 	endpwent();
 
